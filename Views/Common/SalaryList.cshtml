@model IEnumerable<AttendanceCRM.Models.DTOS.SalaryStructureDTO>
@{
    int rCnt = 1;
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css" rel="stylesheet" />
<script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
<style>
    .form-group {
        min-width: 200px;
    }
</style>

<div class="main-panel">
    <div class="content-wrapper">
        <div class="content">
            <div class="row">
                <div class="col-12 mt-3">
                    <div class="card">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h4 class="card-title mb-0">Salary List</h4>
                            <button type="button" class="btn btn-primary">
                                <a href="javascript:void(0);" onclick="openAddModal();" class="text-white text-decoration-none">
                                    <i class="fa fa-plus" aria-hidden="true"></i> Add Salary
                                </a>
                            </button>
                        </div>
                        <div class="card-body">
                            <!-- Filter Section -->
                            <form id="excelUploadForm" enctype="multipart/form-data" method="post" action="/Common/UploadExcel">
                                <div class="d-flex flex-wrap align-items-end mb-3 gap-3">
                                    <div class="form-group mb-0">

                                        <label for="filterUserType">User Type Filter</label>
                                        <select id="filterUserType" class="form-control">
                                            <option value="">-- All User Types --</option>
                                            @foreach (var type in ViewBag.UserType)
                                            {
                                                <option value="@type">@type</option>
                                            }
                                        </select>
                                    </div>
                                    <div class="form-group mb-0">
                                        <label for="monthsSinceJoin">Months Since Joining</label>
                                        <input type="number" class="form-control" id="monthsSinceJoin" placeholder="e.g. 12">
                                    </div>
                                    <div style="display: flex; gap: 10px; align-items: center; margin-top: 10px;">
                                        <!-- Download Template Button -->
                                        <button id="btnDownloadTemplate" class="btn btn-primary">
                                            <i class="fa fa-download"></i> Download Template
                                        </button>

                                       <form id="excelUploadForm" enctype="multipart/form-data" method="post" action="/Common/UploadExcel">
                                        <div style="display: flex; gap: 10px; align-items: center;">
                                            <button type="button" class="btn btn-info" onclick="document.getElementById('excelFile').click()">
                                                <i class="fa fa-upload"></i> Upload Excel
                                            </button>
                                            <input type="file" id="excelFile" name="excelFile" style="display: none;"
                                                   accept=".xlsx, .xls" />

                                        </div>
                                        </form>
                                    </div>
                                </div>
                            </form>

                            <!-- Table Section -->
                            <div class="table-responsive">
                                <table id="example1" class="text-fade table table-bordered w-100">
                                    <thead>
                                        <tr class="text-dark">
                                            <th>S.No</th>
                                            <th>Employee Name</th>
                                            <th>Total Salary</th>
                                            <th>User Type</th>
                                            <th>Date of Join</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var v in Model)
                                        {
                                            <tr>
                                                <td>@(rCnt++)</td>
                                                <td>
                                                    <a href="#" onclick="EditSalary(@v.SalaryStructureId, '@v.UserType', '@v.UserId','@v.UserName', '@v.ProfessionalTax','@v.HRA','@v.SpecialAllowance','@v.Conveyance','@v.BasicSalary', '@v.PF_Employee')" title="Edit">
                                                        @v.UserName
                                                    </a>
                                                </td>
                                                <td>@v.BasicSalary</td>
                                                <td class="userType">@v.UserType</td>
                                                <td data-joining="@Convert.ToDateTime(v.JoiningDate).ToString("yyyy-MM-dd")">
                                                    @Convert.ToDateTime(v.JoiningDate).ToString("dd-MM-yyyy")
                                                </td>
                                                <td>
                                                    <button onclick="DeleteInvoiceType(@v.SalaryStructureId)" title="Delete" class="btn btn-danger btn-sm">
                                                        <i class="fa fa-trash"></i>
                                                    </button>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div> <!-- card-body -->
                    </div> <!-- card -->
                </div> <!-- col-12 -->
            </div> <!-- row -->
        </div> <!-- content -->
    </div> <!-- content-wrapper -->
</div>


<!-- Add Salary Structure Modal -->
<div class="modal fade" id="addSalaryModal" tabindex="-1" aria-labelledby="addSalaryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addSalaryModalLabel">Add Salary</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="SalaryForm" action="@Url.Action("SalaryStructure", "Common")" method="post">
                    @Html.AntiForgeryToken()
                    <div class="row">
                        <div class="col-lg-6">
                            <label>User Type *</label>
                            <select class="form-control" id="UserType" required>
                                <option value="">-- Select User Type --</option>
                                @foreach (var name in ViewBag.UserType)
                                {
                                    <option value=@name>@name</option>
                                }
                            </select>
                        </div>

                        <div class="col-lg-6">
                            <label>User Name *</label>
                            <select class="form-control" id="UserName" name="UserName" required>
                                <option value="">-- Select User Name --</option>
                            </select>
                        </div>
                        <div class="row">
                            <div class="col-md-2">
                                <label for="BasicSalary">Basic Salary *</label>
                                <input class="form-control" name="BasicSalary" id="BasicSalary" type="number" step="0.01" required autocomplete="off">
                            </div>

                            <div class="col-md-2">
                                <label for="HRA">HRA *</label>
                                <input class="form-control" name="HRA" id="HRA" type="number" required autocomplete="off">
                            </div>

                            <div class="col-md-2">
                                <label for="SpecialAllowance">Special Allowance *</label>
                                <input class="form-control" name="SpecialAllowance" id="SpecialAllowance" type="number" required autocomplete="off">
                            </div>

                            <div class="col-md-2">
                                <label for="Conveyance">Conveyance *</label>
                                <input class="form-control" name="Conveyance" id="Conveyance" type="number" required autocomplete="off">
                            </div>

                            <div class="col-md-2">
                                <label for="PF_Employee">PF (Employee) *</label>
                                <input class="form-control" name="PF_Employee" id="PF_Employee" type="number" required autocomplete="off">
                            </div>

                            <div class="col-md-2">
                                <label for="ProfessionalTax">Professional Tax *</label>
                                <input class="form-control" name="ProfessionalTax" id="ProfessionalTax" type="number" required autocomplete="off">
                            </div>
                        </div>


                        <div class="col-md-6 mt-3">
                            <button type="submit" class="btn btn-primary">Save</button>
                            <button type="reset" class="btn btn-success">Reset</button>
                            <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Cancel</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Edit Invoice Type Modal -->
<div class="modal fade" id="editSalaryModal" tabindex="-1" aria-labelledby="editSalaryModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editSalaryModalLabel">Edit Salary</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editSalaryForm" action="@Url.Action("EditSalaryStructure", "Common")" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="SalaryStructureId" id="editSalaryStructureId" value="" />

                    <div class="row">
                        <div class="col-lg-6">
                            <label>User Type *</label>
                            <input type="text" class="form-control" id="editUserType" name="UserType" readonly />
                        </div>
                        <div class="col-lg-6">
                            <label>User Name *</label>
                            <input type="text" class="form-control" id="editUserName" name="UserName" readonly />
                        </div>


                        <div class="row">
                            <div class="col-md-2">
                                <label for="editBasicSalary">Basic Salary *</label>
                                <input class="form-control" name="BasicSalary" id="editBasicSalary" type="number" step="0.01" required autocomplete="off">
                            </div>

                            <div class="col-md-2">
                                <label for="editHRA">HRA *</label>
                                <input class="form-control" name="HRA" id="editHRA" type="number" required autocomplete="off">
                            </div>

                            <div class="col-md-2">
                                <label for="editSpecialAllowance">Special Allowance *</label>
                                <input class="form-control" name="SpecialAllowance" id="editSpecialAllowance" type="number" required autocomplete="off">
                            </div>

                            <div class="col-md-2">
                                <label for="editConveyance">Conveyance *</label>
                                <input class="form-control" name="Conveyance" id="editConveyance" type="number" required autocomplete="off">
                            </div>

                            <div class="col-md-2">
                                <label for="editPF_Employee">PF (Employee) *</label>
                                <input class="form-control" name="PF_Employee" id="editPF_Employee" type="number" required autocomplete="off">
                            </div>

                            <div class="col-md-2">
                                <label for="editProfessionalTax">Professional Tax *</label>
                                <input class="form-control" name="ProfessionalTax" id="editProfessionalTax" type="number" required autocomplete="off">
                            </div>
                        </div>

                        <div class="col-md-6 mt-3">
                            <button type="submit" class="btn btn-primary">Update</button>
                            <button type="reset" class="btn btn-success">Reset</button>
                            <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Cancel</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    // Function to open the Add Invoice Type modal
    function openAddModal() {
        $('#addSalaryModal').modal('show');
    }

    // Function to open the Edit Invoice Type modal and populate it with data
    function EditSalary(id,userType,userId,userName, professionalTax, hra, specialAllowance, conveyance, basicSalary, pfEmployee) {
        $('#editSalaryStructureId').val(id);
        $('#editUserType').val(userType);
        $('#editUserName').val(userName); // Make sure to populate the dropdown with correct options beforehand
        $('#editProfessionalTax').val(professionalTax);
        $('#editHRA').val(hra);
        $('#editSpecialAllowance').val(specialAllowance);
        $('#editConveyance').val(conveyance);
        $('#editBasicSalary').val(basicSalary);
        $('#editPF_Employee').val(pfEmployee);

        // Optional: Set UserType if you have its value too, e.g., $('#editUserType').val(userType);

        $('#editSalaryModal').modal('show');
    }

    // Function to delete an invoice type
    function DeleteInvoiceType(id) {
        Swal.fire({
            title: "Are you sure?",
            text: "Do You Want to Delete This Salary?",
            icon: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn btn-danger",
            confirmButtonText: "Yes, delete it!",
            cancelButtonText: "Cancel",
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: "/Common/DeleteSalaryStructure",
                    type: 'POST',
                    data: { id: id },
                    success: function (response) {
                        Swal.fire("Deleted!", "Your Salary has been deleted.", "success").then(() => {
                            window.location.reload();
                        });
                    },
                    error: function () {
                        Swal.fire("Error!", "There was an issue deleting the Salary.", "error");
                    }
                });
            }
        });
    }

    // Handle form submission for Add Invoice Type
    $('#addSalaryModal').submit(function (e) {
        e.preventDefault();
        var formData = new FormData(this);

           $.ajax({
        url: '/Common/SalaryStructure',
        type: 'POST',
        data: formData,
        processData: false,
        contentType: false,
        success: function (response) {
            console.log(response);  // Check what the response looks like
            if (response.success) {
                Swal.fire("Success!", "Salary created successfully ", "success").then(() => {
                    window.location.reload();
                });
            } else {
                Swal.fire("Error!", response.message || "There was an issue adding the Salary.", "error");
            }
        },
        error: function () {
            Swal.fire("Error!", "There was an error processing your request.", "error");
        }
    });

    });

    // Handle form submission for Edit Invoice Type
    $('#editInvoiceForm').submit(function (e) {
        e.preventDefault();
        var formData = new FormData(this);

        $.ajax({
            url: '/Common/EditSalaryStructure',
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function (response) {
                if (response.success) {
                    Swal.fire("Updated!", "Salary updated successfully.", "success").then(() => {
                        $('#editSalaryModal').modal('hide');
                        window.location.reload();
                    });
                } else {
                    Swal.fire("Error!", response.message || "Failed to update Invoice Type.", "error");
                }
            },
            error: function () {
                Swal.fire("Error!", "An error occurred while updating the Invoice Type.", "error");
            }
        });
    });

    // Search functionality
    function searchTable() {
        var idInput = document.getElementById("searchId").value.toLowerCase();
        var invoiceIdInput = document.getElementById("searchInvoiceId").value.toLowerCase();
        var table = document.getElementById("dataTable");
        var rows = table.getElementsByTagName("tr");

        for (var i = 1; i < rows.length; i++) { // Skip header row
            var idColumn = rows[i].getElementsByTagName("td")[0]; // InvoiceType in the first column
            var invoiceIdColumn = rows[i].getElementsByTagName("td")[1]; // Invoice ID in the second column

            if (idColumn && invoiceIdColumn) {
                var idText = idColumn.textContent.toLowerCase();
                var invoiceIdText = invoiceIdColumn.textContent.toLowerCase();

                // Check if both fields match
                if (idText.includes(idInput) && invoiceIdText.includes(invoiceIdInput)) {
                    rows[i].style.display = "";
                } else {
                    rows[i].style.display = "none";
                }
            }
        }
    }
</script>
<script>
    $(document).ready(function () {
        $("#UserType").change(function () {
            let selectedType = $(this).val();
            $("#UserName").empty().append(`<option value="">-- Loading... --</option>`);

            if (selectedType) {
                $.ajax({
                    url: '/Common/GetUsersByType',
                    type: 'GET',
                    data: { userType: selectedType },
                    success: function (data) {
                        $("#UserName").empty().append(`<option value="">-- Select User Name --</option>`);
                        $.each(data, function (index, user) {
                            $("#UserName").append(`<option value="${user.UserId}">${user.UserName}</option>`);
                        });
                    },
                    error: function () {
                        alert("Error fetching user names.");
                    }
                });
            } else {
                $("#UserName").empty().append(`<option value="">-- Select User Name --</option>`);
            }
        });
    });

    $(document).ready(function () {
        $('#example1').DataTable({
            "paging": true,
            "searching": true,
            "ordering": true
        });
    });
        $('#example1').DataTable({
        pageLength: 10,
        lengthMenu: [5, 10, 25, 50, 100],
        searching: true,
        paging: true,
        ordering: true,
        language: {
            search: "Search Employee:"
        }
    });
        $('#filterUserType').change(function() {
        var selectedUserType = $(this).val();
        var selectedMonths = $('#monthsSinceJoin').val();
        $('#example1 tbody tr').each(function() {
            var userType = $(this).find('td.userType').text();
            var joinDate = $(this).data('joining');
            var monthsSinceJoin = calculateMonthsBetweenDates(joinDate, new Date());

            // Apply filtering logic based on selected criteria
            if ((selectedUserType && userType !== selectedUserType) ||
                (selectedMonths && monthsSinceJoin < selectedMonths)) {
                $(this).hide();
            } else {
                $(this).show();
            }
        });
    });

       $(document).ready(function () {
        function filterTable() {
            var selectedUserType = $('#filterUserType').val();
            var selectedMonths = $('#monthsSinceJoin').val();
            var today = new Date();

            $('#example1 tbody tr').each(function () {
                var userType = $(this).find('td.userType').text().trim();
                var joinDateText = $(this).find('td[data-joining]').attr('data-joining');
                var monthsSinceJoin = calculateMonthsBetweenDates(joinDateText, today);

                var showRow = true;

                if (selectedUserType && userType !== selectedUserType) {
                    showRow = false;
                }

                if (selectedMonths && monthsSinceJoin < parseInt(selectedMonths)) {
                    showRow = false;
                }

                $(this).toggle(showRow);
            });
        }

        // Event triggers for filter
        $('#filterUserType').change(filterTable);
        $('#monthsSinceJoin').on('input', filterTable); // Triggers as user types
    });

    function calculateMonthsBetweenDates(startDate, endDate) {
        var start = new Date(startDate);
        var end = new Date(endDate);
        var months = (end.getFullYear() - start.getFullYear()) * 12;
        months -= start.getMonth();
        months += end.getMonth();
        return months <= 0 ? 0 : months;
    }

</script>
<script>
    $(document).ready(function () {
      $('#btnDownloadTemplate').click(function (e) {
          e.preventDefault();
          let selectedUserType = $('#filterUserType').val(); // Corrected ID
          if (!selectedUserType) {
              alert("Please select a UserType before downloading the Excel template.");
              return;
          }
          window.location.href = `/Common/DownloadTemplate?userType=${selectedUserType}`;
      });

        $('#excelFile').change(function () {
            $('#excelUploadForm').submit();
        });

        $('#excelUploadForm').on('submit', function (e) {
            if (!$('#excelFile').val()) {
                e.preventDefault();
                alert("Please choose an Excel file before submitting.");
            }
        });
    });

        document.getElementById('excelFile').addEventListener('change', function() {
        if(this.files.length > 0) {
            document.getElementById('excelUploadForm').submit();
        }
    });
</script>

