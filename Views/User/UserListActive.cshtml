@model List<AttendanceCRM.Models.DTOS.UserMasterDTO>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<style>
    .search-container {
        width: 250px;
    }

    #filterInput {
        padding: 5px 10px;
        border: 1px solid #ddd;
        border-radius: 4px;
    }

    .table-striped tbody tr:nth-of-type(odd) {
        background-color: rgba(0,0,0,.05);
    }
</style>

<script>
    $(document).ready(function () {
        // Debounce function to limit search frequency
        function debounce(func, timeout = 300) {
            let timer;
            return (...args) => {
                clearTimeout(timer);
                timer = setTimeout(() => { func.apply(this, args); }, timeout);
            };
        }

        // Search functionality
        const performSearch = debounce(function() {
            var searchTerm = $("#filterInput").val().trim();

            $.ajax({
                url: "@Url.Action("UserList", "User")",
                type: "GET",
                data: {
                    searchTerm: searchTerm,
                    page: 1
                },
                headers: {
                    "X-Requested-With": "XMLHttpRequest"
                },
                success: function(result) {
                    // Replace table body correctly
                      $("#leaveTable").html(result);
                },
                error: function() {
                    Swal.fire({
                        icon: 'error',
                        title: 'Search Error',
                        text: 'Unable to perform search. Please try again.'
                    });
                }
            });
        });

        // Attach search handler
        $("#filterInput").on("input", performSearch);

        // Global API Base URL
        var GlobalUrl = "http://localhost:5103/";

        // Function to delete user
        function DeleteUser(UserId, event) {
            event.preventDefault(); // Prevent default action

            console.log("UserId:", UserId); // Debugging line

            if (UserId <= 0) {
                Swal.fire("Error!", "Invalid User ID", "error");
                return;
            }

            Swal.fire({
                title: "Are you sure?",
                text: "Do you want to delete this user?",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#d33",
                cancelButtonColor: "#3085d6",
                confirmButtonText: "Yes, delete it!"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "/User/DeleteUser",
                        type: 'POST',
                        data: { UserId: UserId }, // Sending data as form values
                        success: function (response) {
                            if (response.statusCode === 200) { // Corrected 'statusCode'
                                Swal.fire("Deleted!", "User deleted successfully.", "success")
                                    .then(() => {
                                        $("#row-" + UserId).remove(); // Remove deleted row
                                    });
                            } else {
                                Swal.fire("Error!", response.message || "Deletion failed.", "error");
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error("Error:", error);
                            Swal.fire("Error!", "There was an error deleting the user.", "error");
                        }
                    });
                }
            });
        }

        // Expose DeleteUser to global scope
        window.DeleteUser = DeleteUser;
    });
</script>




<link href="https://cdn.jsdelivr.net/npm/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet">

<!-- Breadcrumb -->
<div class="card">
    <div class="card-header">
        <h2 class="mb-1">Active Employees List</h2>
    </div>
    
</div>

<!-- Employee Stats -->
<div class="row">
    <div class="col-lg-3 col-md-6 d-flex">
        <div class="flex-fill">
            <div class="card box-margin hover-card">
                <a href="@Url.Action("UserList", "User")">
                    <div class="card-body d-flex align-items-center justify-content-between">
                        <div class="d-flex align-items-center">
                            <div>
                                <span class="avatar avatar-lg bg-dark rounded-circle"><i class="ti ti-users"></i></span>
                            </div>
                            <div class="ms-2">
                                <p class="fs-12 fw-medium mb-1">Total Employee</p>
                                <h4>@ViewBag.TotalEmplyeecount</h4>
                            </div>
                        </div>
                    </div>
                </a>
            </div>
        </div>
    </div>

    <div class="col-lg-3 col-md-6 d-flex">
        <div class="flex-fill">
            <div class="card box-margin hover-card">
                <a href="@Url.Action("UserListActive", "User")">
                    <div class="card-body d-flex align-items-center justify-content-between">
                        <div class="d-flex align-items-center">
                            <div>
                                <span class="avatar avatar-lg bg-success rounded-circle"><i class="ti ti-user-share"></i></span>
                            </div>
                            <div class="ms-2">
                                <p class="fs-12 fw-medium mb-1">Active</p>
                                <h4>@ViewBag.TotalEmplyeeActiveCount</h4>
                            </div>
                        </div>
                    </div>
                </a>
            </div>
        </div>
    </div>

    <div class="col-lg-3 col-md-6 d-flex">
        <div class="flex-fill">
            <div class="card box-margin hover-card">
                <a href="@Url.Action("UserListInActive", "User")">
                    <div class="card-body d-flex align-items-center justify-content-between">
                        <div class="d-flex align-items-center">
                            <div>
                                <span class="avatar avatar-lg bg-danger rounded-circle"><i class="ti ti-user-pause"></i></span>
                            </div>
                            <div class="ms-2">
                                <p class="fs-12 fw-medium mb-1">InActive</p>
                                <h4>@ViewBag.TotalEmplyeeInActiveCount</h4>
                            </div>
                        </div>
                    </div>
                </a>
            </div>
        </div>
    </div>

    <div class="col-lg-3 col-md-6 d-flex">
        <div class="flex-fill">
            <div class="card box-margin hover-card">
                <a href="@Url.Action("UserListNewJoin", "User")">
                    <div class="card-body d-flex align-items-center justify-content-between">
                        <div class="d-flex align-items-center">
                            <div>
                                <span class="avatar avatar-lg bg-info rounded-circle"><i class="ti ti-user-plus"></i></span>
                            </div>
                            <div class="ms-2">
                                <p class="fs-12 fw-medium mb-1">New Joiners</p>
                                <h4>@ViewBag.TotalEmplyeeNewJoinCount</h4>
                            </div>
                        </div>
                    </div>
                </a>
            </div>
        </div>
    </div>
</div>

<!-- Page Content -->
<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5>Active Employees List</h5>
        <div class="search-container">
            <input type="text" id="filterInput" class="form-control" placeholder="Search By Name" />
        </div>
    </div>

    <div class="card-body p-0">
        <div class="table-responsive">
            <table class="table table-striped" id="leaveTable">
                <!-- Table will be populated by partial view -->
                <partial name="_UserListTable" model="Model" />
            </table>
        </div>

        <!-- Pagination -->
        <div class="card-footer d-flex justify-content-between align-items-center">
            <div class="pagination-info">
                Showing @((ViewBag.CurrentPage - 1) * ViewBag.PageSize + 1) to
                @(Math.Min(ViewBag.CurrentPage * ViewBag.PageSize, ViewBag.TotalItems)) of
                @ViewBag.TotalItems entries
            </div>
           
            <nav>
                <ul class="pagination mb-0">
                    @{
                        int currentPage = ViewBag.CurrentPage;
                        int totalPages = ViewBag.TotalPages;
                        int startPage = Math.Max(1, currentPage - 2);
                        int endPage = Math.Min(totalPages, startPage + 4); // Ensure only 5 pages are displayed
                    }

                    <!-- Previous Button -->
                    <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("UserList", new { page = currentPage - 1, searchTerm = ViewBag.SearchTerm })">Previous</a>
                    </li>

                    <!-- Page Numbers -->
                    @for (int i = startPage; i <= endPage; i++)
                    {
                        <li class="page-item @(i == currentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("UserList", new { page = i, searchTerm = ViewBag.SearchTerm })">@i</a>
                        </li>
                    }

                    <!-- Next Button -->
                    <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("UserList", new { page = currentPage + 1, searchTerm = ViewBag.SearchTerm })">Next</a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>

