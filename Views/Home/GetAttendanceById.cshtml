@model IEnumerable<AttendanceCRM.Models.Entities.AttendanceEntitie>
 

@{
    int rCnt = 1;
}
<script>
    $(document).ready(function () {
        $("#applyFilterBtn").click(function () {
            var month = $("#monthFilter").val();
            var year = $("#yearFilter").val();
            var startDate = $("#startDate").val();
            var endDate = $("#endDate").val();

            if (startDate && endDate) {
                // Apply Custom Date Range Filter
                window.location.href = "/Home/GetAttendanceById?startDate=" + startDate + "&endDate=" + endDate;
            } else if (month && year) {
                // Apply Month & Year Filter
                window.location.href = "/Home/GetAttendanceById?month=" + month + "&year=" + year;
            } else {
                alert("Please select either Month & Year OR Start & End Date.");
            }
        });



        function debounce(func, timeout = 300) {
                let timer;
                return (...args) => {
                    clearTimeout(timer);
                    timer = setTimeout(() => { func.apply(this, args); }, timeout);
                };
            }

            // Search functionality
            const performSearch = debounce(function() {
                var searchTerm = $("#filterInput").val().trim();

                $.ajax({
                     url: "@Url.Action("GetAttendanceById", "Home")",
                    type: "GET",
                    data: {
                        searchTerm: searchTerm,
                        page: 1
                    },
                    headers: {
                        "X-Requested-With": "XMLHttpRequest"
                    },
                    success: function(result) {
                        // Replace table body correctly
                          $("#leaveTable").html(result);
                    },
                    error: function() {
                        Swal.fire({
                            icon: 'error',
                            title: 'Search Error',
                            text: 'Unable to perform search. Please try again.'
                        });
                    }
                });
            });

            // Attach search handler
            $("#filterInput").on("input", performSearch);

    });
</script>

<div class="row">
    <!-- Month & Year Filter -->
    <div class="col-sm-2">
        <label>Select Month:</label>
        <select id="monthFilter" class="form-control">
            <option value="">Month</option>
            @for (int i = 1; i <= 12; i++)
            {
                <option value="@i">@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(i)</option>
            }
        </select>
    </div>

    <div class="col-sm-2">
        <label>Select Year:</label>
        <select id="yearFilter" class="form-control">
            <option value="">Year</option>
            @for (int i = DateTime.Now.Year; i >= DateTime.Now.Year - 5; i--)
            {
                <option value="@i">@i</option>
            }
        </select>
    </div>

    <!-- Custom Date Range Filter -->
    <div class="col-sm-2">
        <label>Start Date:</label>
        <input type="date" id="startDate" class="form-control">
    </div>

    <div class="col-sm-2">
        <label>End Date:</label>
        <input type="date" id="endDate" class="form-control">
    </div>

    <div class="col-sm-2 d-flex align-items-end">
        <button class="btn btn-primary w-100" id="applyFilterBtn">Apply</button>
    </div>
</div>
<hr />

<!-- Page Content -->
<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5>Attendance List</h5>
        <div class="search-container">
            <input type="text" id="filterInput" class="form-control" placeholder="Search By Name" />
        </div>

    </div>

    <div class="card-body p-0">
        <div class="table-responsive">
            <table class="table table-striped" id="leaveTable">
                <!-- Table will be populated by partial view -->
                <partial name="_Attendance" model="Model" />
            </table>
        </div>

        <!-- Pagination -->
        <div class="card-footer d-flex justify-content-between align-items-center">
            <div class="pagination-info">
                Showing @((ViewBag.CurrentPage - 1) * ViewBag.PageSize + 1) to
                @(Math.Min(ViewBag.CurrentPage * ViewBag.PageSize, ViewBag.TotalItems)) of
                @ViewBag.TotalItems entries
            </div>

            <nav>
                <ul class="pagination mb-0">
                    @{
                        int currentPage = ViewBag.CurrentPage;
                        int totalPages = ViewBag.TotalPages;
                        int startPage = Math.Max(1, currentPage - 2);
                        int endPage = Math.Min(totalPages, startPage + 4); // Ensure only 5 pages are displayed
                    }

                    <!-- Previous Button -->
                    <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("GetAttendanceById", new { page = currentPage - 1, searchTerm = ViewBag.SearchTerm })">Previous</a>
                    </li>

                    <!-- Page Numbers -->
                    @for (int i = startPage; i <= endPage; i++)
                    {
                        <li class="page-item @(i == currentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("GetAttendanceById", new { page = i, searchTerm = ViewBag.SearchTerm })">@i</a>
                        </li>
                    }

                    <!-- Next Button -->
                    <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                        <a class="page-link" href="@Url.Action("GetAttendanceById", new { page = currentPage + 1, searchTerm = ViewBag.SearchTerm })">Next</a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>
